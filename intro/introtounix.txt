Basic tools:

- ls
  - shows you what's where
  - "-lh" gives you lots of information
  - "-a" shows you hidden files
    - what makes it hidden?

- cd
  - ".." and what it means
  - "." and what it means
  - "-" and why it is awesome.

- pwd
  - "where am i?"

- less
  - How to navigate
  - "Vim" Style, or arrow keys, or space
  - Search with "/"
  - Quit with "q"

- Short break for cool things!
  - Tab Completion!
  - Case Sensitivity

- touch
  - Not particularly useful on its own, but it creates a file see!

- mkdir
  - "-p" is a neat little button

- rm
  - and now we can delete it!
  - '-r' to get through folders
  - '-f' for when you don't want any warnings
  - '-i' is a REALLY good idea.

- mv/cp
  - "-r"
  - multiple move/copy
  - "-i"
  - "~"

- cat 
  - useful every once in a while, although less will be more useful for you

- man
  - Have you read the manpage?  Why not?
  - Pretty much everything comes with a manpage
  - Many sections to a manpage
    - synopsis gives you a quick rundown on syntax
    - Description contains longer description of behavior and syntax.  This is where flags hide.
    - Return Value, Notes, Bugs, Examples, and See Also are also awesome
  - man 3 printf

- history

- grep
  - makes history a little more managable

More useful tools:

At this point "why would I ever want to use this."  Well here are some nifty things you can't do with a GUI.

 - ps
   - "aux"
 - Redirection
    - Take the output to the screen and dump it to a file instead. 
    - You can keep and compare outputs indefinitely.
    - You can also send input in.
    - This means you don't have to sit there and type "blah blah blah blah" over and over again.
       - example with "sort"
 - alias
    - alias gcc="gcc -Wall -ansi -pedantic"
    - put it in .bashrc, and always happens
    - alias rm="rm -i"

